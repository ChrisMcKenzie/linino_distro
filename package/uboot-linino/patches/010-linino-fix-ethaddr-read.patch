--- a/Makefile
+++ b/Makefile
@@ -25,7 +25,7 @@ include config.linino
 VERSION = 1
 PATCHLEVEL = 1
 SUBLEVEL = 4
-EXTRAVERSION =
+EXTRAVERSION = -linino
 U_BOOT_VERSION = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)
 VERSION_FILE = include/version_autogenerated.h
 
--- a/cpu/mips/ar7240/ag7240.c
+++ b/cpu/mips/ar7240/ag7240.c
@@ -39,6 +39,12 @@ extern int athr_phy_speed(int unit);
 extern void athr_reg_init(void);
 #endif
 
+#ifdef _DEBUG_
+#define INFO(...) printf(...)
+#else
+#define INFO(...)
+#endif
+
 static int
 ag7240_send(struct eth_device *dev, volatile void *packet, int length)
 {
@@ -266,9 +272,9 @@ static void ag7240_hw_start(ag7240_mac_t
 
     ag7240_reg_wr(mac, AG7240_MAC_FIFO_CFG_3, 0x1f00140);
 
-    printf(": cfg1 %#x cfg2 %#x\n", ag7240_reg_rd(mac, AG7240_MAC_CFG1),
-        ag7240_reg_rd(mac, AG7240_MAC_CFG2));
 
+    INFO(": cfg1 %#x cfg2 %#x\n", ag7240_reg_rd(mac, AG7240_MAC_CFG1),
+        ag7240_reg_rd(mac, AG7240_MAC_CFG2));
 }
 
 static int ag7240_check_link(ag7240_mac_t *mac)
@@ -467,6 +473,12 @@ static void ag7240_get_ethaddr(struct et
         printf("%s: unknown ethernet device %s\n", __func__, dev->name);
         return;
     }
+
+    INFO("Fetching MAC Address from 0x%p\n", __func__, eeprom);
+
+    //Skip the following checks
+    return;
+
     /* Use fixed address if the above address is invalid */
     if (mac[0] != 0x00 || (mac[0] == 0xff && mac[5] == 0xff)) {
 #else
@@ -491,7 +503,7 @@ int ag7240_enet_initialize(bd_t * bis)
     u32 mask, mac_h, mac_l;
     int i;
 
-    printf("ag7240_enet_initialize...\n");
+    INFO("ag7240_enet_initialize...\n");
 
     if(is_ar933x() ) {
         u32 rd = 0x0;
@@ -600,27 +612,27 @@ int ag7240_enet_initialize(bd_t * bis)
                 athrs26_reg_init();
 #endif
 #ifdef CFG_ATHRS27_PHY
-                printf("s27 reg init \n");
+                INFO("s27 reg init \n");
                 athrs27_reg_init();
 #endif
 #ifdef CONFIG_F1E_PHY
-               printf("F1Phy reg init \n");
+               INFO("F1Phy reg init \n");
                athr_reg_init();
 #endif
             }
         } else {
 #ifdef CFG_ATHRS26_PHY
-                printf("athrs26_reg_init_lan\n");
+                INFO("athrs26_reg_init_lan\n");
                 athrs26_reg_init_lan();
 #endif
 #ifdef CFG_ATHRS27_PHY
-            printf("s27 reg init lan \n");
+            INFO("s27 reg init lan \n");
             athrs27_reg_init_lan();
 #endif
     }
 
     ag7240_phy_setup(ag7240_macs[i]->mac_unit);
-    printf("%s up\n",dev[i]->name);
+    INFO("%s up\n",dev[i]->name);
     }
 
     return 1;
--- a/board/ar7240/common/ar7240_s26_phy.c
+++ b/board/ar7240/common/ar7240_s26_phy.c
@@ -55,6 +55,12 @@ typedef enum {
 
 #define MODULE_NAME "ATHRS26"
 
+#ifdef S26_PHY_DEBUG
+#define INFO(...) printf(...)
+#else
+#define INFO(...)
+#endif
+
 /*
  * Track per-PHY port information.
  */
@@ -231,7 +237,7 @@ void athrs26_reg_init_lan(void)
         return;
     
     /* reset switch */
-    printf(MODULE_NAME ": resetting s26\n");
+    INFO(MODULE_NAME ": resetting s26\n");
     athrs26_reg_write(0x0, athrs26_reg_read(0x0)|0x80000000);
 
     while(i--) {
@@ -240,7 +246,7 @@ void athrs26_reg_init_lan(void)
     	if(!(athrs26_reg_read(0x0)&0x80000000))
     		break;
     }
-    printf(MODULE_NAME ": s26 reset done\n");
+    INFO(MODULE_NAME ": s26 reset done\n");
 
     for (phyUnit=0; phyUnit < ATHR_PHY_MAX - 1; phyUnit++) {
 
